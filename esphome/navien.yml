# Basic Config

substitutions:
  #   # https://esphome.io/guides/configuration-types.html#substitutions
  device_name: navien-heater # hostname & entity_id
  friendly_name: "Navien Gas Heater" # Displayed in HA frontend

esphome:
  # https://esphome.io/components/esphome
  name: ${device_name}
  platform: ESP8266
  board: d1_mini
#  on_boot:
#    priority: -100
#    then:
#      - output.turn_on: my_slow_pwm
#      - output.set_level:
#          id: my_slow_pwm
#          level: "50%"

external_components:
  - source: 
      type: local
      path: components
    components: [navien]


  
wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
    
  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: !secret ap_ssid
    password: !secret ap_password


web_server:
  port: 80
  # Also show the internal sensors in the web server.
  # include_internal: true
  # https://esphome.io/components/web_server.html

logger:
#  level: VERBOSE #makes uart stream available in esphome logstream
  baud_rate: 9600 #disable logging over uart

  hardware_uart: UART1 # redirect logs to UART1 GPIO2 to avoid conflicts
                       # with the MCU communication through the main hardware UART

  # https://esphome.io/components/logger
  level: DEBUG
  esp8266_store_log_strings_in_flash: false

api:

ota:


output:
  # Set the rs485 into receive mode
  - platform: gpio
    pin: GPIO14
    inverted: true
    id: uart_rs485_receive_mode
  # Set the driver into regular mode (from undefined startup)
  - platform: gpio
    pin: GPIO12
    id: uart_driver_regular_mode

uart:
  tx_pin: GPIO15
  rx_pin:
    number: GPIO13
    mode:
      input: true
      pullup: false
      
  baud_rate: 19200
  stop_bits: 1
  parity: none
  rx_buffer_size: 8192
  id: main_hw_uart


text_sensor:
  - platform: version
    name: $friendly_name ESPHome Version
    id: esphome_version
    hide_timestamp: True
  - platform: wifi_info
    ip_address:
      id: ip_address
      name: $friendly_name IP Address
    mac_address:
      name: $friendly_name Mac
      id: mac_address

sensor:
  - platform: uptime
    name: $friendly_name Uptime Sensor
  - platform: wifi_signal
    name: $friendly_name wifi signal
  - platform: navien
    name: $friendly_name Test sensor
    uart_id: main_hw_uart
    # These are internal sensors, updated in real-time as the packets come in.
    target_temperature:
      name: $friendly_name Target Temp (Internal)
      id: internal_target_temp
      internal: true
      filters:
        - lambda: return x * (9.0/5.0) + 32.0;
      unit_of_measurement: "°F"
    inlet_temperature:
      name: $friendly_name Inlet Temp (Internal)
      id: internal_inlet_temp
      internal: true
      filters:
        - lambda: return x * (9.0/5.0) + 32.0;
      unit_of_measurement: "°F"
    outlet_temperature:
      name: $friendly_name Outlet Temp (Internal)
      id: internal_outlet_temp
      internal: true
      filters:
        - lambda: return x * (9.0/5.0) + 32.0;
      unit_of_measurement: "°F"
    water_flow:
      name: $friendly_name Water Flow (Internal)
      id: internal_water_flow
      internal: true
      filters:
        - lambda: return x / 3.785;
      unit_of_measurement: "GPM"

  # These are external sensors sent to Home Assistant, updated periodically.
  - platform: template
    name: $friendly_name Target Temp
    lambda: return id(internal_target_temp).state;
    unit_of_measurement: "°F"
    accuracy_decimals: 2
    update_interval: 5s
  - platform: template
    name: $friendly_name Inlet Temp
    lambda: return id(internal_inlet_temp).state;
    unit_of_measurement: "°F"
    accuracy_decimals: 2
    update_interval: 5s
  - platform: template
    name: $friendly_name Outlet Temp
    lambda: return id(internal_outlet_temp).state;
    unit_of_measurement: "°F"
    accuracy_decimals: 2
    update_interval: 5s
  - platform: template
    name: $friendly_name Water Flow
    lambda: return id(internal_water_flow).state;
    unit_of_measurement: "GPM"
    accuracy_decimals: 2
    update_interval: 5s
      


switch:
  - platform: navien
    name: NavienOnOff
  - platform: gpio
    id: hot_button
    pin: D5
    name: "D5"
    restore_mode: RESTORE_DEFAULT_ON
    internal: true
  - platform: gpio
    id: hb4
    pin: D4
    name: "D4"
    restore_mode: RESTORE_DEFAULT_OFF
  - platform: gpio
    id: hb3
    pin: D3
    name: "D3"
    restore_mode: RESTORE_DEFAULT_OFF
  - platform: gpio
    id: hb2
    pin: D2
    name: "D2"
    restore_mode: RESTORE_DEFAULT_OFF


button:
  - platform: restart
    name: "Restart"
#  - platform: navien
#    name: NavienHotButton
#    id: NavienHotButton
  - platform: template
    name: "Wired Hot Button"
    on_press:
    - switch.turn_off: hot_button
    - delay: 500ms
    - switch.turn_on: hot_button


#output:
#  - platform: slow_pwm
##    pin: GPIO14
#    id: my_slow_pwm
#    period: 1s
