# Basic Config

substitutions:
  #   # https://esphome.io/guides/configuration-types.html#substitutions
  device_name: navien-heater # hostname & entity_id
  friendly_name: "Navien" # Displayed in HA frontend
  device_description: "Navien Gas Water Heater"
  tx_pin: GPIO15
  rx_pin: GPIO13
  platform: esp8266
  board: d1_mini

esphome:
  # https://esphome.io/components/esphome
  name: ${device_name}

${platform}: 
  board: ${board}

external_components:
  - source: 
      type: local
      path: components
    components: [navien]


  
wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
    
  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: !secret ap_ssid
    password: !secret ap_password

captive_portal:

web_server:
  port: 80
  # https://esphome.io/components/web_server.html

logger:
#  level: VERBOSE #makes uart stream available in esphome logstream
  baud_rate: 0 #disable logging over uart to avoid interference
               # with sending/receiving over the UART port on ESP8266

  hardware_uart: UART1 # redirect logs to UART1 GPIO2 to avoid conflicts
                       # with the MCU communication through the main hardware UART

  # https://esphome.io/components/logger
  level: INFO
  esp8266_store_log_strings_in_flash: false

api:

ota:
  platform: esphome

uart:
  tx_pin: ${tx_pin}
  rx_pin: ${rx_pin}
      
  baud_rate: 19200
  stop_bits: 1
  parity: none
  rx_buffer_size: 8192
  id: main_hw_uart


text_sensor:
  - platform: version
    name: $friendly_name ESPHome Version
    id: esphome_version
    hide_timestamp: True
  - platform: wifi_info
    ip_address:
      id: ip_address
      name: $friendly_name IP Address
    mac_address:
      name: $friendly_name Mac
      id: mac_address

sensor:
  - platform: uptime
    name: $friendly_name Uptime Sensor
  - platform: wifi_signal
    name: $friendly_name wifi signal
  - platform: navien
    name: $friendly_name Metrics
    uart_id: main_hw_uart
    target_temperature:
      name: $friendly_name Target Temp
      filters:
        - lambda: return x * (9.0/5.0) + 32.0;
      unit_of_measurement: "°F"
    inlet_temperature:
      name: $friendly_name Inlet Temp
      filters:
        - lambda: return x * (9.0/5.0) + 32.0;
      unit_of_measurement: "°F"
    outlet_temperature:
      name: $friendly_name Outlet Temp
      filters:
        - lambda: return x * (9.0/5.0) + 32.0;
      unit_of_measurement: "°F"
    water_flow:
      name: $friendly_name Water Flow
      filters:
        - lambda: return x / 3.785;
      unit_of_measurement: "GPM"
    water_utilization:  
      name: $friendly_name Water Capacity Utilization
      unit_of_measurement: "%"
    gas_total:
      name: $friendly_name Accumulated Gas Usage
      filters:
        - lambda: return x * 9131.0 / 25193.0 / 10.0;
      unit_of_measurement: "Therms"
      accuracy_decimals: 1
    gas_current:
      name: $friendly_name Current Gas Usage
      filters:
        - lambda: return x * 3.9680;
      unit_of_measurement: "BTU"
      accuracy_decimals: 1
    conn_status:
      name: $friendly_name Navien Connection Status
    recirc_status:
      name: $friendly_name Navien Recirculation Status      
#    real_time: true 

binary_sensor:

switch:
  - platform: navien
    name: ${friendly_name} Power On/Off


button:
  - platform: restart
    name: "Restart"


climate:
  - platform: navien
    id: navien_climate
    visual:
#      unit_of_measurement: '°F'
      min_temperature: 98F
      max_temperature: 110F
      temperature_step: '1°F'
    name: Target Temperature
#output:
#  - platform: slow_pwm
##    pin: GPIO14
#    id: my_slow_pwm
#    period: 1s
